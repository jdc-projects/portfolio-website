ARG NODE_IMAGE_TAG=20.13.1-alpine3.19
ARG NGINX_IMAGE_TAG=1.26.0-alpinebookworm-slim

ARG BACKEND_URL

# Get dependencies
FROM node:${NODE_IMAGE_TAG} AS deps
WORKDIR /app

# Copy in packages files and install node modules
COPY ./package.json ./package-lock.json ./
RUN npm ci --omit=dev

# Build project
FROM node:${NODE_IMAGE_TAG} AS builder
ARG BACKEND_URL
WORKDIR /app

# Copy node modules from deps
COPY --from=deps /app/node_modules ./node_modules
COPY ./ ./

# Next.js collects anonymous telemetry data about general usage, which we opt out from
ENV NEXT_TELEMETRY_DISABLED 1

# Define the smtp relay URL
ENV NEXT_PUBLIC_BACKEND_URL $BACKEND_URL

# Run the build
RUN npm run build

# Copy the built project and run nginx
FROM nginxinc/nginx-unprivileged:${NGINX_IMAGE_TAG} AS runner
WORKDIR /usr/share/nginx/frontend

# Get static output generated by build
COPY --from=builder --chown=nginx /app/out ./

# Add nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 8080 for nginx
EXPOSE 8080

USER nginx

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
